
package Menu;

import java.awt.Dimension;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.Icon;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

/**
 *
 * @author ThaiHiep
 */
public class MenuItem extends javax.swing.JPanel {
    

    private boolean isSelected = false;
     private boolean isSelected1 = false;
    public void setShowing(boolean showing) {
        this.showing = showing;
    }

    /**
     * @return the subMenu
     */
    public ArrayList<MenuItem> getSubMenu() {
        return subMenu;
    }

    /**
     * Creates new form MenuItem
     */
    private final ArrayList<MenuItem> subMenu = new ArrayList<>();
    private final ArrayList<MenuItem> subMenu1 = new ArrayList<>();
    
    private ActionListener act;
    
    public MenuItem(Icon icon, String menuName,ActionListener act, MenuItem...subMenu) {
        initComponents();
        lblIcon.setIcon(icon);
        lblName.setText(menuName);
        if(act != null){
            this.act = act;
        }
        this.setSize(new Dimension(Integer.MAX_VALUE, 45));
        this.setMaximumSize(new Dimension(Integer.MAX_VALUE, 45));
        this.setMinimumSize(new Dimension(Integer.MAX_VALUE, 45));
        int leftMargin = 10; // Điều chỉnh khoảng cách từ bên trái
        this.setBorder(new EmptyBorder(0, leftMargin, 0, 0));
            
            
                for (int i = 0; i < subMenu.length; i++) {
                this.subMenu.add(subMenu[i]);
                this.subMenu1.add(subMenu[i]);
                subMenu[i].setVisible(false);
            
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        lblIcon = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        lblName.setText("Menu name");
        lblName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblNameMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
   private boolean showing = false;
    private void lblNameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNameMousePressed
        // TODO add your handling code here:
        if (showing) {
           hideMenu();
            isSelected1 = false;
          // setBackground(new java.awt.Color(250, 250, 250));
        } else {
            isSelected1 = true;
            showMenu();
            //setBackground(new java.awt.Color(250, 0, 0));

        }
        if (act != null) {
            act.actionPerformed(null);
        }
        
    }//GEN-LAST:event_lblNameMousePressed
    
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        
        if (showing) {
           hideMenu();
           
          // setBackground(new java.awt.Color(250, 250, 250));
        } else {
            
            showMenu();
           // setBackground(new java.awt.Color(250, 0, 0));

        }
        if (act != null) {
            act.actionPerformed(null);
        }
    }//GEN-LAST:event_formMousePressed

   // Thêm phương thức đệ quy để ẩn tất cả phần tử con

   
    private void showMenu(){ 
    new Thread(new Runnable() { 
            @Override
            public void run() {
                for (int i = 0; i < subMenu.size(); i++) {
                    sleep();
                    int leftMargin = 30; // Điều chỉnh khoảng cách từ bên trái
                    subMenu.get(i).setBorder(new EmptyBorder(0, leftMargin, 0, 0));
                    System.out.println(subMenu.get(i).getSubMenu());
                    subMenu.get(i).setVisible(true);
                }
                 
                showing = true;
                getParent().repaint();
                getParent().revalidate(); 
            }
        }).start();

}
    private void hideMenu(){
        new Thread(new Runnable() {
            @Override
            public void run() {
                for (int i = subMenu.size() - 1; i >= 0; i--) {
                    sleep();
                    subMenu.get(i).setVisible(false);
                   // subMenu.get(i).hideMenu();
                }
                getParent().repaint();
                getParent().revalidate();
                showing = false;
            }
        }).start();
    }
       
private void sleep(){
    try {
        Thread.sleep(20);
    } catch (Exception e) {
    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblIcon;
    private javax.swing.JLabel lblName;
    // End of variables declaration//GEN-END:variables
}
