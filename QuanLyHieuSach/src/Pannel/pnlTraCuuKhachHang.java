
package Pannel;

import Entity.TaiKhoan;
import java.awt.Color;
import java.awt.Font;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JTextField;

import org.apache.poi.ss.usermodel.FormulaEvaluator;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
/**
 *
 * @author FPTSHOP
 */
public class pnlTraCuuKhachHang extends javax.swing.JPanel {

    /**
     * Creates new form TraCuuKhachHang
     */
    private String tp = "Tỉnh/Thành phố";
    private String q = "Quận/huyện";
    private String cboDiaChi = "";
    private ArrayList<String> cities ;
    private ArrayList<String> districts ;
    private ArrayList<String> wardsDistricts ;
    private TaiKhoan tk;
    public pnlTraCuuKhachHang(TaiKhoan tk) throws IOException {
        initComponents();
         addPlaceholderStyle(txtTimKiem);
          cities = readExcel_City();
          for (String city : cities) {
            cboTinhThanhPho.addItem(city);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        lblMaKhachHang = new javax.swing.JLabel();
        lblSoDienThoai = new javax.swing.JLabel();
        lblDiaChi = new javax.swing.JLabel();
        lblTenKhachHang = new javax.swing.JLabel();
        txtSoDienThoai = new javax.swing.JTextField();
        txtTenKhachHang = new javax.swing.JTextField();
        cboQuanHuyen = new javax.swing.JComboBox<>();
        cboTinhThanhPho = new javax.swing.JComboBox<>();
        cboPhuongXa = new javax.swing.JComboBox<>();
        btnLamMoi = new javax.swing.JButton();
        btnThemKhachHang = new javax.swing.JButton();
        btnSuaThongTinKhachHang = new javax.swing.JButton();
        btnLapHoaDon = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblTimKiem = new javax.swing.JLabel();
        txtTimKiem = new ServiceUser.TextFieldSuggestion();
        txtTraCuuKhachHang = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 153, 153));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 12)))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMaKhachHang.setText("Mã khách hàng        ");
        jPanel2.add(lblMaKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 310, 30));

        lblSoDienThoai.setText("Số điện thoại");
        jPanel2.add(lblSoDienThoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, 78, -1));

        lblDiaChi.setText("Địa chỉ");
        jPanel2.add(lblDiaChi, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 82, -1));

        lblTenKhachHang.setText("Tên khách hàng");
        jPanel2.add(lblTenKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 90, -1));
        jPanel2.add(txtSoDienThoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 50, 210, -1));

        txtTenKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenKhachHangActionPerformed(evt);
            }
        });
        jPanel2.add(txtTenKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 330, -1));

        cboQuanHuyen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboQuanHuyenActionPerformed(evt);
            }
        });
        jPanel2.add(cboQuanHuyen, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 90, 150, -1));

        cboTinhThanhPho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTinhThanhPhoActionPerformed(evt);
            }
        });
        jPanel2.add(cboTinhThanhPho, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 160, 20));

        jPanel2.add(cboPhuongXa, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 90, 160, -1));

        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });
        jPanel2.add(btnLamMoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 97, -1));

        btnThemKhachHang.setText("Thêm khách hàng");
        btnThemKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemKhachHangActionPerformed(evt);
            }
        });
        jPanel2.add(btnThemKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 140, 129, -1));

        btnSuaThongTinKhachHang.setText("Sửa thông tin khách hàng");
        jPanel2.add(btnSuaThongTinKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 140, -1, -1));

        btnLapHoaDon.setText("Lập hóa đơn");
        jPanel2.add(btnLapHoaDon, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, -1, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));

        lblTimKiem.setText("Tìm kiếm");

        txtTimKiem.setText("Tìm kiếm theo mã, số điện thoại, tên khách hàng");
        txtTimKiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(299, 299, 299)
                .addComponent(lblTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimKiem))
                .addContainerGap())
        );

        txtTraCuuKhachHang.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtTraCuuKhachHang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTraCuuKhachHang.setText("Tra cứu khách hàng");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTraCuuKhachHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1067, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(txtTraCuuKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTenKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenKhachHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenKhachHangActionPerformed

    private void txtTimKiemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusGained
        // TODO add your handling code here:
        if(txtTimKiem.getText().equals("Tìm kiếm theo mã, số điện thoại, tên khách hàng")){
            txtTimKiem.setText("");
            txtTimKiem.requestFocus();
            removePlaceholderStyle(txtTimKiem);
        }
    }//GEN-LAST:event_txtTimKiemFocusGained
    public void addPlaceholderStyle(JTextField textFile){
        Font  font = textFile.getFont();
        font = font.deriveFont(Font.ITALIC);
        textFile.setFont(font);
        textFile.setForeground(Color.GRAY);
    }
    public void removePlaceholderStyle(JTextField textFile){
         Font  font = textFile.getFont();
        font = font.deriveFont(Font.PLAIN|Font.BOLD);
        textFile.setFont(font);
        textFile.setForeground(Color.black);
    }
    private void txtTimKiemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusLost
        // TODO add your handling code here:
        if(txtTimKiem.getText().length()==0){
            addPlaceholderStyle(txtTimKiem);
            txtTimKiem.setText("Tìm kiếm theo mã, số điện thoại, tên khách hàng");
        }
    }//GEN-LAST:event_txtTimKiemFocusLost

    private void btnThemKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemKhachHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThemKhachHangActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        //txtMaKhachHang.setText("");
       // txtMaKhachHang.setEditable(true);
        txtSoDienThoai.setText("");
        txtTenKhachHang.setText("");
        cboTinhThanhPho.setSelectedItem("Tỉnh/Thành phố");
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void cboQuanHuyenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboQuanHuyenActionPerformed
        // TODO add your handling code here:
        String t = cboQuanHuyen.getSelectedItem()+"";

        cboQuanHuyen.addItem(q);
        // System.out.println(districtComboBox.getSelectedItem()+"");
        if( q == "Tỉnh/Thành phố"){

            //wardComboBox.removeAllItems();
            //wardComboBox.addItem("Phường/xã");
            // wardComboBox.setEnabled(true);
            // updateWardComboBox();
            // q = districtComboBox.getSelectedItem()+"";
            cboPhuongXa.setEnabled(false);
            cboPhuongXa.removeAllItems();
            cboPhuongXa.addItem("Phường/xã");

        }else{
            cboPhuongXa.setEnabled(true);
            try {
                wardsDistricts = readExcel_wardsDistrict(cboQuanHuyen,cboPhuongXa);
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
            if(!cboDiaChi.equals(cboQuanHuyen.getSelectedItem())){
                cboPhuongXa.removeAllItems();
                cboPhuongXa.addItem("Phường/xã");
                for (String wad : wardsDistricts) {
                    cboPhuongXa.addItem(wad);
                }
            }
        }
        
        cboDiaChi = cboQuanHuyen.getSelectedItem()+"";
        cboQuanHuyen.removeItem(q);

    }//GEN-LAST:event_cboQuanHuyenActionPerformed

    private void cboTinhThanhPhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTinhThanhPhoActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if(!tp.equals(cboTinhThanhPho.getSelectedItem()+"")||cboTinhThanhPho.getSelectedItem().equals("Tỉnh/Thành phố")){
            q = cboTinhThanhPho.getSelectedItem()+"";
            //System.out.println(provinceComboBox.getSelectedItem());
            if(cboTinhThanhPho.getSelectedItem().equals("Tỉnh/Thành phố")){

                cboQuanHuyen.removeAllItems();
                cboQuanHuyen.addItem("Quận/huyện");
                cboPhuongXa.removeAllItems();
                cboPhuongXa.addItem("Phường/xã");
                cboQuanHuyen.setEnabled(false);
                cboPhuongXa.setEnabled(false);

                System.out.println("1223 "+"Tỉnh/Thành phố");
            }else{

                try {
                    districts = readExcel_districts(cboTinhThanhPho,cboQuanHuyen,cboPhuongXa,tp);
                } catch (IOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
                cboQuanHuyen.removeAllItems();
                cboQuanHuyen.addItem("Quận/huyện");
                for (String district : districts) {
                    cboQuanHuyen.addItem(district);
                }
                cboPhuongXa.setEnabled(true);
                try {
                    wardsDistricts = readExcel_wardsDistrict(cboQuanHuyen,cboPhuongXa);
                } catch (IOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
                cboPhuongXa.removeAllItems();
                cboPhuongXa.addItem("Phường/xã");
                for (String wad : wardsDistricts) {
                    cboPhuongXa.addItem(wad);
                }
            }
        }
        tp = cboTinhThanhPho.getSelectedItem()+"";
    }//GEN-LAST:event_cboTinhThanhPhoActionPerformed
public static ArrayList<String> readExcel_City() throws IOException {
		//Đọc dữ liệu từ file Diachi.xlsx
                ArrayList<String> cities = new ArrayList<>();
		FileInputStream file = new FileInputStream("D:\\MON\\PTUD\\JavaDiaChi\\Book1.xlsx");
		//Nạp file input stream đưa về dạng excel
		XSSFWorkbook wb = new XSSFWorkbook(file);
		//Đọc file từ Sheet 1 (bắt đầu từ số 0)
		XSSFSheet sheet = wb.getSheetAt(0);
		//Lấy các giá trị trong các cột
		FormulaEvaluator formula = wb.getCreationHelper().createFormulaEvaluator();
		int v = 0;
		for(Row row:sheet) {
			if(!cities.contains(row.getCell(0)+"")) {
				if(row.getCell(0) !=null ) {
					cities.add(row.getCell(0)+"");
					v++;
				}
			}
		}
		System.out.println(v);
		wb.close();
		file.close();
		return cities;
}   
    public static ArrayList<String> readExcel_districts(JComboBox<String> cbo,JComboBox<String> cbo1,JComboBox<String> cbo2,String tb) throws IOException {
	//Đọc dữ liệu từ file Diachi.xlsx
            ArrayList<String> districts = new ArrayList<>();
		FileInputStream file = new FileInputStream("D:\\MON\\PTUD\\JavaDiaChi\\Book1.xlsx");
		//Nạp file input stream đưa về dạng excel
		XSSFWorkbook wb = new XSSFWorkbook(file);
		//Đọc file từ Sheet 1 (bắt đầu từ số 0)
		XSSFSheet sheet = wb.getSheetAt(0);
		//Lấy các giá trị trong các cột
		FormulaEvaluator formula = wb.getCreationHelper().createFormulaEvaluator();
		//Duyệt các row
                
		int v = 0;
                if(cbo.getSelectedItem().equals("Tỉnh/Thành phố")){
                    cbo1.setEnabled(false);
                    cbo2.setEnabled(false);
                }else{
                     cbo1.setEnabled(true);
                    cbo1.setEditable(false);
                    cbo2.setEnabled(true);
                }
		for(Row row:sheet) {
			if(row.getCell(0) != null && cbo.getSelectedItem().equals(row.getCell(0)+"") ) {
				if(!districts.contains(row.getCell(2)+"" )) {
					districts.add(row.getCell(2)+"");
					v++;
				}
			}
		}
                
		System.out.println(v);
		wb.close();
		file.close();
		return districts;
	}    
     public static ArrayList<String> readExcel_wardsDistrict(JComboBox<String> cbo,JComboBox<String> cbo1) throws IOException {
		//Đọc dữ liệu từ file Diachi.xlsx
    	 ArrayList<String> wardsDistrict = new ArrayList<>();
		FileInputStream file = new FileInputStream("D:\\MON\\PTUD\\JavaDiaChi\\Book1.xlsx");
		//Nạp file input stream đưa về dạng excel
		XSSFWorkbook wb = new XSSFWorkbook(file); 
		//Đọc file từ Sheet 1 (bắt đầu từ số 0)
		XSSFSheet sheet = wb.getSheetAt(0);
		//Lấy các giá trị trong các cột
		FormulaEvaluator formula = wb.getCreationHelper().createFormulaEvaluator();
		//Duyệt các row
		int v = 0;
                
                if(cbo.getSelectedItem().equals("Quận/huyện")){
                    cbo1.setEnabled(false);
                }else{
                cbo.setEnabled(true);   
                }
		for(Row row:sheet) {
			if(row.getCell(2) != null && cbo.getSelectedItem().equals(row.getCell(2)+"") ) {
				if(!wardsDistrict.contains(row.getCell(4)+"" )) {
					wardsDistrict.add(row.getCell(4)+"");
					
				}
			}
		}
		System.out.println(v);
		wb.close();
		file.close();
		return wardsDistrict;
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnLapHoaDon;
    private javax.swing.JButton btnSuaThongTinKhachHang;
    private javax.swing.JButton btnThemKhachHang;
    private javax.swing.JComboBox<String> cboPhuongXa;
    private javax.swing.JComboBox<String> cboQuanHuyen;
    private javax.swing.JComboBox<String> cboTinhThanhPho;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblDiaChi;
    private javax.swing.JLabel lblMaKhachHang;
    private javax.swing.JLabel lblSoDienThoai;
    private javax.swing.JLabel lblTenKhachHang;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JTextField txtSoDienThoai;
    private javax.swing.JTextField txtTenKhachHang;
    private ServiceUser.TextFieldSuggestion txtTimKiem;
    private javax.swing.JLabel txtTraCuuKhachHang;
    // End of variables declaration//GEN-END:variables
}
